{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["IndexPage","props","posts","data","allMarkdownRemark","edges","title","className","length","to","icon","faSearch"],"mappings":"4FAAA,qHAiFeA,UAjDG,SAACC,GAA0B,IAErCC,EADWD,EAATE,KACWC,kBAAkBC,MAErC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,uBAAKC,UAAU,cACb,uBAAKA,UAAU,wBACb,gBAAC,IAAD,CAAUL,MAAOA,IAChBA,EAAMM,OAAS,IAAM,KACpB,uBAAKD,UAAU,mBACb,uBAAKA,UAAU,iBACb,gBAAC,OAAD,CAAME,GAAG,WACP,gBAAC,IAAD,CAAIC,KAAMC,MACV,uD","file":"component---src-pages-index-tsx-fde77ebbc8fcefd38500.js","sourcesContent":["import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport {getCatData} from '../utils/getData';\n\nimport './styles/index.scss';\nimport PostList from '../components/PostList';\n\nexport interface IndexPageProps {\n  path: string;\n  location: any;\n  data: any;\n}\n\nconst DispCat = () =>{\n  const catData = getCatData(3);\n  const disp = catData.map( ({name,length,head})=>{\n        let catPosts = head.map(({title,slug})=>(<Link to={slug}>{title}</Link>) )\n        return(<div><div>{name}</div><div>{catPosts}</div></div>);\n      }\n    );\n  return (\n    <div>\n      {disp}\n    </div>\n  );\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const { data } = props;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <div className=\"index-wrap\">\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 100 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: {frontmatter: {title: {ne: \"\"}}}, sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\n      edges {\n        node {\n          excerpt(format: PLAIN, truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            update(formatString: \"MMM DD, YYYY\")\n            title\n            category\n            tags\n            titleImage\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}